version: "3.8"

services:
  # Database
  postgres:
    image: postgres:14-alpine
    container_name: accounts-postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - app.env
    environment:
      POSTGRES_USER: "accountUser"
      POSTGRES_PASSWORD: "accountPassword"
      POSTGRES_DB: "accounts"
      PGDATA: /var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  # phppgadmin
  phppgadmin:
    image: dockage/phppgadmin
    container_name: accounts-phppgadmin
    restart: always
    ports:
      - "8080:80"
    env_file:
      - app.env
    environment:
      PHP_PG_ADMIN_SERVER_HOST: postgres
    depends_on:
      - postgres

  adminer:
    image: adminer
    container_name: accounts-adminer
    restart: always
    ports:
      - 8081:8080
    env_file:
      - app.env
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres

  go-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go-api
    restart: always
    ports:
      - 3000:3000
    env_file:
      - app.env
    # environment:
    #   - DB_SOURCE="postgres://accountUser:accountPassword@accounts-postgres:5432/accounts?sslmode=disable"
    depends_on:
      postgres:
        condition: service_healthy
        restart: true

volumes:
  postgres-data:
    driver: local

networks:
  accounts-network:
    driver: bridge
    external: true
    name: accounts-network
